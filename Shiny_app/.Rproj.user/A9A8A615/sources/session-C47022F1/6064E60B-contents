#USA -Dynamic-VAR
# R code for all the computations for the USA mortality database with the proposed 
#Functional median polish ANOVA (FMP-ANOVA) approach.

#1. This scripts can be easily incorporated to the other two data sets (France and Japan)
# by simply changing the data set entries and the data. The data can easily loaded by
# changing the folder name (France orJapan)e.g., ./dataset_entries/France/

packages <- c("generics", "demography", "forecast","fda","fdaoutlier", 
              "rlist", "mrfDepth","ftsa","rainbow")

## Now load or install&load all
package_check <- lapply(
  packages,
  FUN <- function(x) {
    if (!require(x, character.only = TRUE)) {
      install.packages(x, dependencies = TRUE)
      library(x, character.only = TRUE)
    }
  }
)

setwd("~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/")
################################################################################
# Dataset entries
################################################################################
dataset_entries<-readRDS("./Rcodes_paper/dataset_entries/USA/dataset_entries.rds")
year = dataset_entries[[1]]
n_year = dataset_entries[[2]]
age = dataset_entries[[3]]
n_age = dataset_entries[[4]]
n_prefectures=dataset_entries[[5]]

# Row partition
part_list = list()
for(ik in 1:n_prefectures) {
  part_list[[ik]] = (n_year*ik-(n_year-1)):(n_year*ik)
}

#Column partition
n_populations=2
part_list_c = list()
for(ik in 1:n_populations) {
  part_list_c[[ik]] = (n_age*ik-(n_age-1)):(n_age*ik)
}
remove_zeroes <- function(data_raw,n_prefectures,n_year,n_age) {
  N       <- n_prefectures
  T       <- n_year
  age_max <- n_age
  
  data_nozero <- list()
  for(i in 1:N) {
    data_nozero[[i]] <- matrix(data_raw[[i]],age_max,T)
  }
  for(i in 1:N) {
    for(j in 2:age_max) {#For j=1, the two zeroes have been removed before
      for(k in 1:T){ 
        if(data_nozero[[i]][j,k]==-Inf){
          data_nozero[[i]][j,k] <- data_nozero[[i]][j-1,k]
        }
      }
    }
  }
  return(data_nozero)
}
names_states <- readRDS("./Rcodes_paper/names_states/USA/names_states.rds")
################################################################################
# Dataset 
################################################################################
USA_male <- readRDS("./Rcodes_paper/datasets/USA/USA_male.rds")
USA_female <- readRDS("./Rcodes_paper/datasets/USA/USA_female.rds")
# Remove the zeros in the datasets
USA_male   <-remove_zeroes(data_raw=USA_male,n_prefectures,n_year,n_age) 
USA_female <-remove_zeroes(data_raw=USA_female,n_prefectures,n_year,n_age)

all_male<-t(list.cbind(USA_male))
all_female<-t(list.cbind(USA_female))
################################################################################
#Functional median polish decomposition and residuals
################################################################################
# source("FMP-ANOVA_decomposition.R")
library("ftsa")
Y=cbind(all_male,all_female)
Both<-ftsa::Two_way_median_polish(Y,year,age,n_prefectures,n_populations)
Residuals<- ftsa::Two_way_Residuals(Y,n_prefectures,year,age,n_populations)
Res1=Residuals$residuals1
Res2=Residuals$residuals2
Residuals_<-cbind(Res1,Res2)
# Reconstructed data
RR<-Residuals$rd #Matrix with the original data reconstructed from the FMP decomposition
#  It's the proof of the reconstruction of the residuals. 
Residuals$R #The result should be a vector with two entries TRUE, TRUE.
#Indicating that after adding both deterministic and time-varying components the FTS are recovered.
Fixed_part<-Residuals$Fixed_comp # deterministic components to be added up after forecasting

################################################################################
# Computation of the point forecasts
################################################################################
source("New_Point_forecast.R")

# With a rolling window approach
cl <- makePSOCKcluster(detectCores()-2)
registerDoParallel(cl)
forecasted_curves_triangular_rolling_USA_FMP_cov <- foreach(i = 2:n_prefectures, .packages = c("ftsa")) %dopar% ForecastC(i,fixed_com=Fixed_part,Residuals_f=Residuals_,est_method = "cov",prediction_method="VAR")
stopCluster(cl)

# With an expanding window approach
# cl <- makePSOCKcluster(detectCores()-2)
# registerDoParallel(cl)
# forecasted_curves_triangular_expanding <- foreach(i = 1:n_prefectures, .packages = c("ftsa")) %dopar% ForecastC_expanding(i,fixed_com=Fixed_part,Residuals_f=Residuals_)
# stopCluster(cl)

# saveRDS(forecasted_curves_triangular_rolling_USA_FMP_VAR,"forecasted_curves_triangular_rolling_USA_FMP_VAR.rds")
####################################################################################
#Compute the error for the point forecasts obtained in the rolling window approach.
####################################################################################
source("./Rcodes_paper/forecast_errors.R")
forecasted_curves_USA_FMP_VAR_cov <- readRDS("./forecasted_curves_USA_FMP_VAR_cov.rds") 
max_h=10
error_MAPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_MAPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
male<-Y[,1:n_age]
female<-Y[,(n_age+1):(2*n_age)]
for (i in 1:n_prefectures) {
  forecasted_pref_male=forecasted_curves_USA_FMP_VAR_cov[[i]][1:n_age,]
  forecasted_pref_female=forecasted_curves_USA_FMP_VAR_cov[[i]][(n_age+1):(2*n_age),]
  True_pop_male=t(male[(n_year*i-(max_h-1)):(n_year*i),])
  True_pop_female=t(female[(n_year*i-(max_h-1)):(n_year*i),])
  for (j in 1:max_h) {
    error_MAPE_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
    error_RMSPE_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
    error_MAPE_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
    error_RMSPE_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
    
  }
  
}

All_errors_rolling<-list(error_MAPE_male,error_MAPE_female,
                         error_RMSPE_male,error_RMSPE_female)
# saveRDS(All_errors_rolling,"All_errors_table_USA_dynamic.rds")
Errors_mean_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_rolling))
Errors_sd_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_rolling))
for (i in 1:length(All_errors_rolling)) {
  error=All_errors_rolling[[i]]
  Errors_mean_rolling[,i]=apply( error,2,mean)
  Errors_sd_rolling[,i]=apply( error,2,sd)
}
colnames(Errors_mean_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
colnames(Errors_sd_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
rownames(Errors_mean_rolling)<-names_states
rownames(Errors_sd_rolling)<-names_states

# saveRDS(Errors_mean_rolling,"Errors_mean_rolling_VAR_FMP_USA_cov.rds")

Errors_mean_rolling <- readRDS("./Errors_mean_rolling_VAR_FMP_USA_cov.rds")
dir.l<-"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Plots2paper/"
savepdf <- function(file, width=16, height=10)
{
  fname <- paste(dir.l,file,".pdf",sep="")
  pdf(fname, width=width/2.54, height=height/2.54,
      pointsize=10)
  par(mgp=c(2.2,0.45,0), tcl=-0.4, mar=c(3.3,3.6,1.1,1.1))
}


us.means_cov <- readRDS("./Errors_mean_AR_FMP_USA_cov.rds")
savepdf("USA_MAPE_FMP_Cov") 
par(mfrow=c(1,2))
boxplot(us.means_cov[,2],Errors_mean_rolling[,2],main="MAPE Female",col=c("blue","red"))
boxplot(us.means_cov[,1],Errors_mean_rolling[,1],main="MAPE Male",col=c("blue","red"))
dev.off()

savepdf("USA_RMPSE_FMP_Cov") 
par(mfrow=c(1,2))
boxplot(us.means_cov[,4],Errors_mean_rolling[,4],main="RMPSE Female",col=c("blue","red"))
boxplot(us.means_cov[,3],Errors_mean_rolling[,3],main="RMPSE Male",col=c("blue","red"))
dev.off()

