# France based on static FPCA_ FM-ANOVA
# Set a working directory
setwd("~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/")

#Library
library(freqdom.fda)

packages <- c("generics", "demography", "forecast","fda","fdaoutlier", 
              "rlist", "mrfDepth","ftsa","rainbow")

## Now load or install&load all
package_check <- lapply(
  packages,
  FUN <- function(x) {
    if (!require(x, character.only = TRUE)) {
      install.packages(x, dependencies = TRUE)
      library(x, character.only = TRUE)
    }
  }
)



################################################################################
# Dataset entries
################################################################################
dataset_entries<-readRDS("./Rcodes_paper/dataset_entries/France/dataset_entries.rds")
year = dataset_entries[[1]]
n_year = dataset_entries[[2]]
age = dataset_entries[[3]]
n_age = dataset_entries[[4]]
n_prefectures=dataset_entries[[5]]

# Row partition
part_list = list()
for(ik in 1:n_prefectures) {
  part_list[[ik]] = (n_year*ik-(n_year-1)):(n_year*ik)
}

#Column partition
n_populations=2
part_list_c = list()
for(ik in 1:n_populations) {
  part_list_c[[ik]] = (n_age*ik-(n_age-1)):(n_age*ik)
}
################################################################################
# Datasets 
################################################################################
# France
names_states_France <- readRDS("./Rcodes_paper/names_states/France/name_states.rds")
France_male <- readRDS("./Rcodes_paper/datasets/France/France_male.rds")
France_female <- readRDS("./Rcodes_paper/datasets/France/France_female.rds")
all_male<-t(list.cbind(France_male))
all_female<-t(list.cbind(France_female))
########################################################################
# Comparison with the functional mean ANOVA approach (FM-ANOVA)
########################################################################
# This function computes the functional mean ANOVA decomposition based on means
FANOVA_means<-ftsa::FANOVA(data_pop1=t(all_male),data_pop2=t(all_female),year,age,n_prefectures,n_populations)
#This function computes the functional residuals after removing the deterministic components
# obtained from the FANOVA function.
Residuals_means<-ftsa::Two_way_Residuals_means(data_pop1=t(all_male),data_pop2=t(all_female),
                                               year,age,n_prefectures,n_populations)
Res1_means=Residuals_means$residuals1_mean
Res2_means=Residuals_means$residuals2_mean
Residuals_mean<-cbind(Res1_means,Res2_means)
# Reconstructed data
RR<-Residuals_means$rd #Matrix with the original data reconstructed from the FMP decomposition
#  It's the proof of the reconstruction of the residuals. 
Residuals_means$R #The result should be a vector with two entries TRUE, TRUE.
#Indicating that after adding both deterministic and time-varying components the FTS are recovered.
Fixed_part_means<-Residuals_means$Fixed_comp_mean # deterministic components to be added up after forecasting

################################################################################
# Computation of the point forecasts based on functional mean ANOVA (FM-ANOVA)
################################################################################
source("./Point_forecasting_FANOVA_cov.R")
# With a rolling window approach
cl <- makePSOCKcluster(detectCores()-2)
registerDoParallel(cl)
forecasted_curves_triangular_means_rolling_static <- foreach(i = 1:n_prefectures, .packages = c("ftsa")) %dopar% ForecastC_mean(i,fixed_com=Fixed_part_means,Residuals_f=Residuals_mean)
stopCluster(cl)

# With an expanding window approach
cl <- makePSOCKcluster(detectCores()-2)
registerDoParallel(cl)
forecasted_curves_triangular_means_expanding <- foreach(i = 1:n_prefectures, .packages = c("ftsa")) %dopar% ForecastC_mean_expanding(i,fixed_com=Fixed_part_means,Residuals_f=Residuals_mean)
stopCluster(cl)

# saveRDS(forecasted_curves_triangular_means_rolling_static ,"forecasted_curves_triangular_means_rolling_France_static.rds")
##############################################################################################################
#Compute the error based on FM-ANOVA approach, with the forecasts obtained in the rolling window approach
##############################################################################################################
forecasted_curves_triangular_means_rolling_static_France <- readRDS("./forecasted_curves_triangular_means_rolling_France_static.rds")
source("./Rcodes_paper/forecast_errors.R")
max_h=10
error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
for (i in 1:n_prefectures) {
  forecasted_pref_male=forecasted_curves_triangular_means_rolling_static_France[[i]][1:n_age,]
  forecasted_pref_female=forecasted_curves_triangular_means_rolling_static_France[[i]][(n_age+1):(2*n_age),]
  True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])
  True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])
  for (j in 1:max_h) {
    error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
    error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
    error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
    error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
    
  }
  
}

All_errors_mean_rolling<-list(error_MAPE_means_male,error_MAPE_means_female,
                              error_RMSPE_means_male,error_RMSPE_means_female)
# saveRDS(All_errors_mean_rolling,"All_errors_table_France_FM_static.rds")

Errors_mean_basedmeans_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_mean_rolling))
Errors_sd_basedmeans_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_mean_rolling))
for (i in 1:length(All_errors_mean_rolling)) {
  error=All_errors_mean_rolling[[i]]
  Errors_mean_basedmeans_rolling[,i]=apply( error,2,mean)
  Errors_sd_basedmeans_rolling[,i]=apply( error,2,sd)
}
colnames(Errors_mean_basedmeans_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
colnames(Errors_sd_basedmeans_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
rownames(Errors_mean_basedmeans_rolling)<-names_states_France
rownames(Errors_sd_basedmeans_rolling)<-names_states_France

# saveRDS(Errors_mean_basedmeans_rolling,"france.basedmeans_static.rds")
