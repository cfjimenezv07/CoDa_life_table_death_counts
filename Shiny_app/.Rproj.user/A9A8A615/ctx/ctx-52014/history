frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
for (k in 8:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
for (i in 10:n_prefectures) {
# i=9
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 1:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
print(i)
}
i=28
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 1:3) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
for (k in 5:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
for (i in 29:n_prefectures) {
# i=28
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 5:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
print(i)
}
for (i in 29:n_prefectures) {
# i=28
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 1:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
print(i)
}
i=45
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 1:7) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
for (k in 9:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
# i=45
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 9:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
for (i in 46:n_prefectures) {
# i=45
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 1:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
print(i)
}
i=49
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 1:9) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
for (i in 50:n_prefectures) {
# i=49
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 1:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM[[i]] <- forecasted_prefecture
print(i)
}
length(forecasted_prefecture_FM)
dim(forecasted_prefecture_FM[[1]])
View(forecasted_prefecture_FM[[1]])
View(forecasted_prefecture_FM[[9]])
matplot(forecasted_prefecture_FM[[9]],type = 'l')
matplot(forecasted_prefecture_FM[[9]],type = 'l')
matplot(forecasted_prefecture_FM[[1]],type = 'l')
saveRDS(forecasted_prefecture_FM,"forecasted_curves_USA_FM_VAR_cov.rds")
forecasted_curves_USA_FM_VAR_cov <- readRDS("./forecasted_curves_USA_FM_VAR_cov.rds")
max_h=10
error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
for (i in 1:n_prefectures) {
forecasted_pref_male=forecasted_curves_USA_FM_VAR_cov[[i]][1:n_age,]
forecasted_pref_female=forecasted_curves_USA_FM_VAR_cov[[i]][(n_age+1):(2*n_age),]
True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])
True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])
for (j in 1:max_h) {
error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
}
}
# saveRDS(forecasted_curves_triangular_means_rolling ,"forecasted_curves_triangular_means_rolling_USA_new.rds")
##############################################################################################################
#Compute the error based on FM-ANOVA approach, with the forecasts obtained in the rolling window approach
##############################################################################################################
source("./Rcodes_paper/forecast_errors.R")
forecasted_curves_USA_FM_VAR_cov <- readRDS("./forecasted_curves_USA_FM_VAR_cov.rds")
max_h=10
error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
for (i in 1:n_prefectures) {
forecasted_pref_male=forecasted_curves_USA_FM_VAR_cov[[i]][1:n_age,]
forecasted_pref_female=forecasted_curves_USA_FM_VAR_cov[[i]][(n_age+1):(2*n_age),]
True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])
True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])
for (j in 1:max_h) {
error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
}
}
All_errors_mean_rolling<-list(error_MAPE_means_male,error_MAPE_means_female,
error_RMSPE_means_male,error_RMSPE_means_female)
# saveRDS(All_errors_mean_rolling,"All_errors_table_USA_FM_dynamic.rds")
Errors_mean_basedmeans_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_mean_rolling))
Errors_sd_basedmeans_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_mean_rolling))
for (i in 1:length(All_errors_mean_rolling)) {
error=All_errors_mean_rolling[[i]]
Errors_mean_basedmeans_rolling[,i]=apply( error,2,mean)
Errors_sd_basedmeans_rolling[,i]=apply( error,2,sd)
}
colnames(Errors_mean_basedmeans_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
colnames(Errors_sd_basedmeans_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
rownames(Errors_mean_basedmeans_rolling)<-names_states
rownames(Errors_sd_basedmeans_rolling)<-names_states
saveRDS(Errors_mean_basedmeans_rolling,"Errors_mean_rolling_VAR_FM_cov_USA.rds")
All_errors_tables_USA_static <- readRDS("~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/All_errors_tables_USA_static.rds")
# saveRDS(All_errors_rolling,"All_errors_tables_USA_static.rds")
All_errors_tables_USA_static <- readRDS("./All_errors_tables_USA_static.rds")
Errors_mean_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_rolling))
Errors_sd_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_rolling))
# saveRDS(All_errors_rolling,"All_errors_tables_USA_static.rds")
All_errors_rolling <- readRDS("./All_errors_tables_USA_static.rds")
Errors_mean_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_rolling))
Errors_sd_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_rolling))
for (i in 1:length(All_errors_rolling)) {
error=All_errors_rolling[[i]]
Errors_mean_rolling[,i]=apply( error,2,mean)
Errors_sd_rolling[,i]=apply( error,2,sd)
}
colnames(Errors_mean_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
colnames(Errors_sd_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
rownames(Errors_mean_rolling)<-names_states_USA
rownames(Errors_sd_rolling)<-names_states_USA
saveRDS(Errors_mean_rolling,"Errors_mean_AR_FMP_USA_cov.rds")
us.means_cov <- readRDS("Errors_mean_AR_FMP_USA_cov.rds.rds")
us.means_cov <- readRDS("./Errors_mean_AR_FMP_USA_cov.rds.rds")
us.means_cov <- readRDS("./Errors_mean_AR_FMP_USA_cov.rds")
us.means_cov <- readRDS("./Errors_mean_AR_FMP_USA_cov.rds")
us.means_cov <- readRDS("./Errors_mean_AR_FMP_USA_cov.rds")
savepdf("USA_MAPE_FMP_Cov")
dir.l<-"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Plots2paper/"
savepdf <- function(file, width=16, height=10)
{
fname <- paste(dir.l,file,".pdf",sep="")
pdf(fname, width=width/2.54, height=height/2.54,
pointsize=10)
par(mgp=c(2.2,0.45,0), tcl=-0.4, mar=c(3.3,3.6,1.1,1.1))
}
us.means_cov <- readRDS("./Errors_mean_AR_FMP_USA_cov.rds")
savepdf("USA_MAPE_FMP_Cov")
par(mfrow=c(1,2))
boxplot(us.means_cov[,2],Errors_mean_rolling[,2],main="MAPE Female",col=c("blue","red"))
boxplot(us.means_cov[,1],Errors_mean_rolling[,1],main="MAPE Male",col=c("blue","red"))
dev.off()
savepdf("USA_RMPSE_FMP_Cov")
par(mfrow=c(1,2))
boxplot(us.means_cov[,4],Errors_mean_rolling[,4],main="RMPSE Female",col=c("blue","red"))
boxplot(us.means_cov[,3],Errors_mean_rolling[,3],main="RMPSE Male",col=c("blue","red"))
dev.off()
par(mfrow=c(1,2))
boxplot(us.means_cov[,2],Errors_mean_rolling[,2],main="MAPE Female",col=c("blue","red"))
#1. This scripts can be easily incorporated to the other two data sets (France and Japan)
# by simply changing the data set entries and the data.
# changing the folder name (France or Japan). e.g., ./dataset_entries/France/
packages <- c("generics", "demography", "forecast","fda","fdaoutlier",
"rlist", "mrfDepth","ftsa","rainbow")
## Now load or install&load all
package_check <- lapply(
packages,
FUN <- function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
setwd("~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/")
################################################################################
# Data set entries
################################################################################
dataset_entries<-readRDS("./Rcodes_paper/dataset_entries/USA/dataset_entries.rds")
year = dataset_entries[[1]]
n_year = dataset_entries[[2]]
age = dataset_entries[[3]]
n_age = dataset_entries[[4]]
n_prefectures=dataset_entries[[5]]
# Row partition
part_list = list()
for(ik in 1:n_prefectures) {
part_list[[ik]] = (n_year*ik-(n_year-1)):(n_year*ik)
}
#Column partition
n_populations=2
part_list_c = list()
for(ik in 1:n_populations) {
part_list_c[[ik]] = (n_age*ik-(n_age-1)):(n_age*ik)
}
remove_zeroes <- function(data_raw,n_prefectures,n_year,n_age) {
N       <- n_prefectures
T       <- n_year
age_max <- n_age
data_nozero <- list()
for(i in 1:N) {
data_nozero[[i]] <- matrix(data_raw[[i]],age_max,T)
}
for(i in 1:N) {
for(j in 2:age_max) {#For j=1, the two zeroes have been removed before
for(k in 1:T){
if(data_nozero[[i]][j,k]==-Inf){
data_nozero[[i]][j,k] <- data_nozero[[i]][j-1,k]
}
}
}
}
return(data_nozero)
}
names_states <- readRDS("./Rcodes_paper/names_states/USA/names_states.rds")
################################################################################
# Data set
################################################################################
USA_male <- readRDS("./Rcodes_paper/datasets/USA/USA_male.rds")
USA_female <- readRDS("./Rcodes_paper/datasets/USA/USA_female.rds")
# Remove the zeros in the datasets
USA_male   <-remove_zeroes(data_raw=USA_male,n_prefectures,n_year,n_age)
USA_female <-remove_zeroes(data_raw=USA_female,n_prefectures,n_year,n_age)
all_male<-t(list.cbind(USA_male))
all_female<-t(list.cbind(USA_female))
########################################################################
# Comparison with the functional mean ANOVA approach (FM-ANOVA)
########################################################################
# This function computes the functional mean ANOVA decomposition based on means
FANOVA_means<-ftsa::FANOVA(data_pop1=t(all_male),data_pop2=t(all_female),year,age,n_prefectures,n_populations)
#This function computes the functional residuals after removing the deterministic components
# obtained from the FANOVA function.
Residuals_means<-ftsa::Two_way_Residuals_means(data_pop1=t(all_male),data_pop2=t(all_female),
year,age,n_prefectures,n_populations)
Res1_means=Residuals_means$residuals1_mean
Res2_means=Residuals_means$residuals2_mean
Residuals_mean<-cbind(Res1_means,Res2_means)
# Reconstructed data
RR<-Residuals_means$rd #Matrix with the original data reconstructed from the FMP decomposition
#  It's the proof of the reconstruction of the residuals.
Residuals_means$R #The result should be a vector with two entries TRUE, TRUE.
#Indicating that after adding both deterministic and time-varying components the FTS are recovered.
Fixed_part_means<-Residuals_means$Fixed_comp_mean # deterministic components to be added up after forecasting
################################################################################
# Computation of the point forecasts based on functional mean ANOVA (FM-ANOVA)
################################################################################
source("New_Point_forecast.R")
fixed_com=Fixed_part_means
Residuals_f=Residuals_mean
est_method = "cov"
prediction_method="VAR"
forecasted_prefecture_FM_VAR <- list()
for (i in 1:n_prefectures) {
# i=49
pref=(n_year * i - (n_year - 1)):(n_year * i)
forecasted_prefecture <- matrix(NA, nrow = n_age * 2, ncol = max_h)
for (k in 1:10) {
pref_k <- pref[k:(n_year - max_h - 1 + k)]
frc <- Pref_forecast_curves(fixed_com = fixed_com[pref_k, ],
Residuals_f = Residuals_f[pref_k, ],
est_method = est_method,
fh = 1, PI = NULL, B = 1000, prediction_method=prediction_method)
forecasted_prefecture[ , k] = frc$med_polish_curve_forecast
print(k)
}
forecasted_prefecture_FM_VAR[[i]] <- forecasted_prefecture
print(i)
}
forecasted_curves_USA_FM_VAR_cov <- readRDS("./forecasted_curves_USA_FM_VAR_cov.rds")
max_h=10
error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
for (i in 1:n_prefectures) {
forecasted_pref_male=forecasted_curves_USA_FM_VAR_cov[[i]][1:n_age,]
forecasted_pref_female=forecasted_curves_USA_FM_VAR_cov[[i]][(n_age+1):(2*n_age),]
True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])
True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])
for (j in 1:max_h) {
error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
}
}
# saveRDS(forecasted_curves_triangular_means_rolling ,"forecasted_curves_triangular_means_rolling_USA_new.rds")
##############################################################################################################
#Compute the error based on FM-ANOVA approach, with the forecasts obtained in the rolling window approach
##############################################################################################################
source("./Rcodes_paper/forecast_errors.R")
forecasted_curves_USA_FM_VAR_cov <- readRDS("./forecasted_curves_USA_FM_VAR_cov.rds")
max_h=10
error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
for (i in 1:n_prefectures) {
forecasted_pref_male=forecasted_curves_USA_FM_VAR_cov[[i]][1:n_age,]
forecasted_pref_female=forecasted_curves_USA_FM_VAR_cov[[i]][(n_age+1):(2*n_age),]
True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])
True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])
for (j in 1:max_h) {
error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
}
}
All_errors_mean_rolling<-list(error_MAPE_means_male,error_MAPE_means_female,
error_RMSPE_means_male,error_RMSPE_means_female)
saveRDS(All_errors_mean_rolling,"All_errors_table_USA_FM_cov_VAR.rds")
# saveRDS(All_errors_mean_rolling,"All_errors_table_USA_FM_cov_VAR.rds")
Errors_mean_basedmeans_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_mean_rolling))
Errors_sd_basedmeans_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_mean_rolling))
for (i in 1:length(All_errors_mean_rolling)) {
error=All_errors_mean_rolling[[i]]
Errors_mean_basedmeans_rolling[,i]=apply( error,2,mean)
Errors_sd_basedmeans_rolling[,i]=apply( error,2,sd)
}
colnames(Errors_mean_basedmeans_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
colnames(Errors_sd_basedmeans_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
rownames(Errors_mean_basedmeans_rolling)<-names_states
rownames(Errors_sd_basedmeans_rolling)<-names_states
saveRDS(Errors_mean_basedmeans_rolling,"Errors_mean_rolling_VAR_FM_cov_USA.rds")
# saveRDS(Errors_mean_basedmeans_rolling,"Errors_mean_rolling_VAR_FM_cov_USA.rds")
dir.l<-"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Plots2paper/"
savepdf <- function(file, width=16, height=10)
{
fname <- paste(dir.l,file,".pdf",sep="")
pdf(fname, width=width/2.54, height=height/2.54,
pointsize=10)
par(mgp=c(2.2,0.45,0), tcl=-0.4, mar=c(3.3,3.6,1.1,1.1))
}
Errors_mean_basedmeans_rolling_USA_Static <- readRDS("~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/Errors_mean_basedmeans_rolling_USA_Static.rds")
us.basedmeans_cov <- readRDS("./Errors_mean_basedmeans_rolling_USA_Static.rds")
us.basedmeans_cov <- readRDS("./Errors_mean_basedmeans_rolling_USA_Static.rds")
# some plots
savepdf("USA_MAPE_FM_cov")
par(mfrow=c(1,2))
boxplot(us.basedmeans_cov[,2],Errors_mean_basedmeans_rolling[,2],main="MAPE Female",col=c("blue","red"))
boxplot(us.basedmeans_cov[,1],Errors_mean_basedmeans_rolling[,1],main="MAPE Male",col=c("blue","red"))
dev.off()
savepdf("USA_RMPSE_FM_cov")
par(mfrow=c(1,2))
boxplot(us.basedmeans[,4],Errors_mean_basedmeans_rolling[,4],main="RMPSE Female",col=c("blue","red"))
boxplot(us.basedmeans[,3],Errors_mean_basedmeans_rolling[,3],main="RMPSE Male",col=c("blue","red"))
# some plots
savepdf("USA_MAPE_FM_cov")
par(mfrow=c(1,2))
boxplot(us.basedmeans_cov[,2],Errors_mean_basedmeans_rolling[,2],main="MAPE Female",col=c("blue","red"))
boxplot(us.basedmeans_cov[,1],Errors_mean_basedmeans_rolling[,1],main="MAPE Male",col=c("blue","red"))
dev.off()
savepdf("USA_RMPSE_FM_cov")
par(mfrow=c(1,2))
boxplot(us.basedmeans_cov[,4],Errors_mean_basedmeans_rolling[,4],main="RMPSE Female",col=c("blue","red"))
boxplot(us.basedmeans_cov[,3],Errors_mean_basedmeans_rolling[,3],main="RMPSE Male",col=c("blue","red"))
dev.off()
forecasted_curves_USA_FM_VAR_cov <- readRDS("./forecasted_curves_USA_FM_VAR_cov.rds")
max_h=10
error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)
for (i in 1:n_prefectures) {
forecasted_pref_male=forecasted_curves_USA_FM_VAR_cov[[i]][1:n_age,]
forecasted_pref_female=forecasted_curves_USA_FM_VAR_cov[[i]][(n_age+1):(2*n_age),]
True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])
True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])
for (j in 1:max_h) {
error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])
error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])
}
}
All_errors_mean_rolling<-list(error_MAPE_means_male,error_MAPE_means_female,
error_RMSPE_means_male,error_RMSPE_means_female)
# saveRDS(All_errors_mean_rolling,"All_errors_table_USA_FM_cov_VAR.rds")
Errors_mean_basedmeans_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_mean_rolling))
Errors_sd_basedmeans_rolling<-matrix(0,nrow=n_prefectures,ncol=length(All_errors_mean_rolling))
for (i in 1:length(All_errors_mean_rolling)) {
error=All_errors_mean_rolling[[i]]
Errors_mean_basedmeans_rolling[,i]=apply( error,2,mean)
Errors_sd_basedmeans_rolling[,i]=apply( error,2,sd)
}
colnames(Errors_mean_basedmeans_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
colnames(Errors_sd_basedmeans_rolling)<-c("MAPE_male","MAPE_female","RMSPE_male","RMSPE_female")
rownames(Errors_mean_basedmeans_rolling)<-names_states
rownames(Errors_sd_basedmeans_rolling)<-names_states
View(Errors_mean_basedmeans_rolling)
View(us.basedmeans_cov)
par(mfrow=c(1,2))
boxplot(us.basedmeans_cov[,2],Errors_mean_basedmeans_rolling[,2],main="MAPE Female",col=c("blue","red"))
boxplot(us.basedmeans_cov[,1],Errors_mean_basedmeans_rolling[,1],main="MAPE Male",col=c("blue","red"))
