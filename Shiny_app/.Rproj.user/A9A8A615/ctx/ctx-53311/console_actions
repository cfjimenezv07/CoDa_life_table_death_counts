{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "> ",
        "# France based on static FPCA",
        "> ",
        "# Set a working directory",
        "> ",
        "setwd(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/\")",
        "> ",
        "#Library",
        "> ",
        "library(freqdom.fda)",
        "> ",
        "packages <- c(\"generics\", \"demography\", \"forecast\",\"fda\",\"fdaoutlier\", ",
        "+ ",
        "              \"rlist\", \"mrfDepth\",\"ftsa\",\"rainbow\")",
        "> ",
        "## Now load or install&load all",
        "> ",
        "package_check <- lapply(",
        "+ ",
        "  packages,",
        "+ ",
        "  FUN <- function(x) {",
        "+ ",
        "    if (!require(x, character.only = TRUE)) {",
        "+ ",
        "      install.packages(x, dependencies = TRUE)",
        "+ ",
        "      library(x, character.only = TRUE)",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        ")",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset entries",
        "> ",
        "################################################################################",
        "> ",
        "dataset_entries<-readRDS(\"./Rcodes_paper/dataset_entries/France/dataset_entries.rds\")",
        "> ",
        "year = dataset_entries[[1]]",
        "> ",
        "n_year = dataset_entries[[2]]",
        "> ",
        "age = dataset_entries[[3]]",
        "> ",
        "n_age = dataset_entries[[4]]",
        "> ",
        "n_prefectures=dataset_entries[[5]]",
        "> ",
        "# Row partition",
        "> ",
        "part_list = list()",
        "> ",
        "for(ik in 1:n_prefectures) {",
        "+ ",
        "  part_list[[ik]] = (n_year*ik-(n_year-1)):(n_year*ik)",
        "+ ",
        "}",
        "> ",
        "#Column partition",
        "> ",
        "n_populations=2",
        "> ",
        "part_list_c = list()",
        "> ",
        "for(ik in 1:n_populations) {",
        "+ ",
        "  part_list_c[[ik]] = (n_age*ik-(n_age-1)):(n_age*ik)",
        "+ ",
        "}",
        "> ",
        "################################################################################",
        "> ",
        "# Datasets ",
        "> ",
        "################################################################################",
        "> ",
        "# France",
        "> ",
        "names_states_France <- readRDS(\"./Rcodes_paper/names_states/France/name_states.rds\")",
        "> ",
        "France_male <- readRDS(\"./Rcodes_paper/datasets/France/France_male.rds\")",
        "> ",
        "France_female <- readRDS(\"./Rcodes_paper/datasets/France/France_female.rds\")",
        "> ",
        "all_male<-t(list.cbind(France_male))",
        "> ",
        "all_female<-t(list.cbind(France_female))",
        "> ",
        "################################################################################",
        "> ",
        "#Functional median polish decomposition and residuals",
        "> ",
        "################################################################################",
        "> ",
        "library(\"ftsa\")",
        "> ",
        "Y=cbind(all_male,all_female)",
        "> ",
        "Both<-ftsa::Two_way_median_polish(Y,year,age,n_prefectures,n_populations)",
        "Iteration= 1 \nSum = 9595 \nIteration= 2 \nSum = 206.6383 \nIteration= 3 \nSum = 74.75457 \nIteration= 4 \nSum = 52.25195 \nIteration= 5 \nSum = -36.95691 \n",
        "> ",
        "Residuals<- ftsa::Two_way_Residuals(Y,n_prefectures,year,age,n_populations)",
        "Iteration= 1 \nSum = 9595 \nIteration= 2 \nSum = 206.6383 \nIteration= 3 \nSum = 74.75457 \nIteration= 4 \nSum = 52.25195 \nIteration= 5 \nSum = -36.95691 \n",
        "> ",
        "Res1=Residuals$residuals1",
        "> ",
        "####################################################################################",
        "> ",
        "#Compute the error for the point forecasts obtained in the rolling window approach.",
        "> ",
        "####################################################################################",
        "> ",
        "forecasted_curves_triangular_rolling_static_France <- readRDS(\"./forecasted_curves_triangular_rolling_France_new.rds\")",
        "> ",
        "source(\"./Rcodes_paper/forecast_errors.R\")",
        "> ",
        "max_h=10",
        "> ",
        "error_MAPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_MAPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "male<-Y[,1:n_age]",
        "> ",
        "female<-Y[,(n_age+1):(2*n_age)]",
        "> ",
        "for (i in 1:n_prefectures) {",
        "+ ",
        "  forecasted_pref_male=forecasted_curves_triangular_rolling_static_France[[i]][1:n_age,]",
        "+ ",
        "  forecasted_pref_female=forecasted_curves_triangular_rolling_static_France[[i]][(n_age+1):(2*n_age),]",
        "+ ",
        "  True_pop_male=t(male[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  True_pop_female=t(female[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  for (j in 1:max_h) {",
        "+ ",
        "    error_MAPE_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_RMSPE_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_MAPE_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    error_RMSPE_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "All_errors_rolling<-list(error_MAPE_male,error_MAPE_female,",
        "+ ",
        "                         error_RMSPE_male,error_RMSPE_female)",
        "> ",
        "saveRDS(All_errors_rolling,\"All_erros_table_France_static.rds\")",
        "> ",
        "# saveRDS(forecasted_curves_triangular_means_rolling_static ,\"forecasted_curves_triangular_means_rolling_France_static.rds\")",
        "> ",
        "##############################################################################################################",
        "> ",
        "#Compute the error based on FM-ANOVA approach, with the forecasts obtained in the rolling window approach",
        "> ",
        "##############################################################################################################",
        "> ",
        "forecasted_curves_triangular_means_rolling_static_France <- readRDS(\"./forecasted_curves_triangular_means_rolling_France_static.rds\")",
        "> ",
        "source(\"./Rcodes_paper/forecast_errors.R\")",
        "> ",
        "max_h=10",
        "> ",
        "error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "for (i in 1:n_prefectures) {",
        "+ ",
        "  forecasted_pref_male=forecasted_curves_triangular_means_rolling_static_France[[i]][1:n_age,]",
        "+ ",
        "  forecasted_pref_female=forecasted_curves_triangular_means_rolling_static_France[[i]][(n_age+1):(2*n_age),]",
        "+ ",
        "  True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  for (j in 1:max_h) {",
        "+ ",
        "    error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "All_errors_mean_rolling<-list(error_MAPE_means_male,error_MAPE_means_female,",
        "+ ",
        "                              error_RMSPE_means_male,error_RMSPE_means_female)",
        "> ",
        "saveRDS(All_errors_mean_rolling,\"All_errors_table_France_FM_static.rds\")",
        "> ",
        "packages <- c(\"generics\", \"demography\", \"forecast\",\"fda\",\"fdaoutlier\", ",
        "+ ",
        "              \"rlist\", \"mrfDepth\",\"ftsa\",\"rainbow\")",
        "> ",
        "## Now load or install&load all",
        "> ",
        "package_check <- lapply(",
        "+ ",
        "  packages,",
        "+ ",
        "  FUN <- function(x) {",
        "+ ",
        "    if (!require(x, character.only = TRUE)) {",
        "+ ",
        "      install.packages(x, dependencies = TRUE)",
        "+ ",
        "      library(x, character.only = TRUE)",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        ")",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset entries",
        "> ",
        "################################################################################",
        "> ",
        "dataset_entries<-readRDS(\"./dataset_entries/USA/dataset_entries.rds\")",
        "Error in gzfile(file, \"rb\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In gzfile(file, \"rb\") :",
        "\n ",
        " cannot open compressed file './dataset_entries/USA/dataset_entries.rds', probable reason 'No such file or directory'\n",
        "> ",
        "setwd(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes\")",
        "> ",
        "setwd(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/\")",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset entries",
        "> ",
        "################################################################################",
        "> ",
        "dataset_entries<-readRDS(\".Rcodes_paper/dataset_entries/USA/dataset_entries.rds\")",
        "Error in gzfile(file, \"rb\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In gzfile(file, \"rb\") :",
        "\n ",
        " cannot open compressed file '.Rcodes_paper/dataset_entries/USA/dataset_entries.rds', probable reason 'No such file or directory'\n",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset entries",
        "> ",
        "################################################################################",
        "> ",
        "dataset_entries<-readRDS(\".Rcodes_paper/dataset_entries/USA/dataset_entries.rds\")",
        "Error in gzfile(file, \"rb\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In gzfile(file, \"rb\") :",
        "\n ",
        " cannot open compressed file '.Rcodes_paper/dataset_entries/USA/dataset_entries.rds', probable reason 'No such file or directory'\n",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset entries",
        "> ",
        "################################################################################",
        "> ",
        "dataset_entries<-readRDS(\"./Rcodes_paper/dataset_entries/USA/dataset_entries.rds\")",
        "> ",
        "year = dataset_entries[[1]]",
        "> ",
        "n_year = dataset_entries[[2]]",
        "> ",
        "age = dataset_entries[[3]]",
        "> ",
        "n_age = dataset_entries[[4]]",
        "> ",
        "n_prefectures=dataset_entries[[5]]",
        "> ",
        "# Row partition",
        "> ",
        "part_list = list()",
        "> ",
        "for(ik in 1:n_prefectures) {",
        "+ ",
        "  part_list[[ik]] = (n_year*ik-(n_year-1)):(n_year*ik)",
        "+ ",
        "}",
        "> ",
        "#Column partition",
        "> ",
        "n_populations=2",
        "> ",
        "part_list_c = list()",
        "> ",
        "for(ik in 1:n_populations) {",
        "+ ",
        "  part_list_c[[ik]] = (n_age*ik-(n_age-1)):(n_age*ik)",
        "+ ",
        "}",
        "> ",
        "remove_zeroes <- function(data_raw,n_prefectures,n_year,n_age) {",
        "+ ",
        "  N       <- n_prefectures",
        "+ ",
        "  T       <- n_year",
        "+ ",
        "  age_max <- n_age",
        "+ ",
        "  ",
        "+ ",
        "  data_nozero <- list()",
        "+ ",
        "  for(i in 1:N) {",
        "+ ",
        "    data_nozero[[i]] <- matrix(data_raw[[i]],age_max,T)",
        "+ ",
        "  }",
        "+ ",
        "  for(i in 1:N) {",
        "+ ",
        "    for(j in 2:age_max) {#For j=1, the two zeroes have been removed before",
        "+ ",
        "      for(k in 1:T){ ",
        "+ ",
        "        if(data_nozero[[i]][j,k]==-Inf){",
        "+ ",
        "          data_nozero[[i]][j,k] <- data_nozero[[i]][j-1,k]",
        "+ ",
        "        }",
        "+ ",
        "      }",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        "  return(data_nozero)",
        "+ ",
        "}",
        "> ",
        "names_states <- readRDS(\"./names_states/USA/names_states.rds\")",
        "Error in gzfile(file, \"rb\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In gzfile(file, \"rb\") :",
        "\n ",
        " cannot open compressed file './names_states/USA/names_states.rds', probable reason 'No such file or directory'\n",
        "> ",
        "names_states <- readRDS(\"./Rcodes_paper/names_states/USA/names_states.rds\")",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset ",
        "> ",
        "################################################################################",
        "> ",
        "USA_male <- readRDS(\"./datasets/USA/USA_male.rds\")",
        "Error in gzfile(file, \"rb\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In gzfile(file, \"rb\") :",
        "\n ",
        " cannot open compressed file './datasets/USA/USA_male.rds', probable reason 'No such file or directory'\n",
        "> ",
        "USA_female <- readRDS(\"./datasets/USA/USA_female.rds\")",
        "Error in gzfile(file, \"rb\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In gzfile(file, \"rb\") :",
        "\n ",
        " cannot open compressed file './datasets/USA/USA_female.rds', probable reason 'No such file or directory'\n",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset ",
        "> ",
        "################################################################################",
        "> ",
        "USA_male <- readRDS(\"./Rcodes_paper/datasets/USA/USA_male.rds\")",
        "> ",
        "USA_female <- readRDS(\"./Rcodes_paper/datasets/USA/USA_female.rds\")",
        "> ",
        "# Remove the zeros in the datasets",
        "> ",
        "USA_male   <-remove_zeroes(data_raw=USA_male,n_prefectures,n_year,n_age) ",
        "> ",
        "USA_female <-remove_zeroes(data_raw=USA_female,n_prefectures,n_year,n_age)",
        "> ",
        "all_male<-t(list.cbind(USA_male))",
        "> ",
        "all_female<-t(list.cbind(USA_female))",
        "> ",
        "################################################################################",
        "> ",
        "#Functional median polish decomposition and residuals",
        "> ",
        "################################################################################",
        "> ",
        "# source(\"FMP-ANOVA_decomposition.R\")",
        "> ",
        "library(\"ftsa\")",
        "> ",
        "Y=cbind(all_male,all_female)",
        "> ",
        "Both<-ftsa::Two_way_median_polish(Y,year,age,n_prefectures,n_populations)",
        "Iteration= 1 \nSum = 5151 \nIteration= 2 \nSum = 32.09625 \nIteration= 3 \nSum = 70.25659 \nIteration= 4 \nSum = -4.344438 \n",
        "> ",
        "Residuals<- ftsa::Two_way_Residuals(Y,n_prefectures,year,age,n_populations)",
        "Iteration= 1 \nSum = 5151 \nIteration= 2 \nSum = 32.09625 \nIteration= 3 \nSum = 70.25659 \nIteration= 4 \nSum = -4.344438 \n",
        "> ",
        "Res1=Residuals$residuals1",
        "> ",
        "Res2=Residuals$residuals2",
        "> ",
        "Residuals_<-cbind(Res1,Res2)",
        "> ",
        "# Reconstructed data",
        "> ",
        "RR<-Residuals$rd #Matrix with the original data reconstructed from the FMP decomposition",
        "> ",
        "#  It's the proof of the reconstruction of the residuals. ",
        "> ",
        "Residuals$R #The result should be a vector with two entries TRUE, TRUE.",
        "[1] TRUE TRUE\n",
        "> ",
        "#Indicating that after adding both deterministic and time-varying components the FTS are recovered.",
        "> ",
        "Fixed_part<-Residuals$Fixed_comp # deterministic components to be added up after forecasting",
        "> ",
        "################################################################################",
        "> ",
        "# Computation of the point forecasts",
        "> ",
        "################################################################################",
        "> ",
        "source(\"Point_forecasting.R\")",
        "> ",
        "forecasted_curves_triangular_USA <- readRDS(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/Rcodes_paper/results_for the plots/USA/forecasted_curves_triangular_USA.rds\")",
        "> ",
        "forecasted_curves_triangular_rolling <- readRDS(\"./Rcodes_paper/results_for the plots/USA/forecasted_curves_triangular_USA.rds\") ",
        "> ",
        "max_h=10",
        "> ",
        "error_MAPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_MAPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "male<-Y[,1:n_age]",
        "> ",
        "female<-Y[,(n_age+1):(2*n_age)]",
        "> ",
        "for (i in 1:n_prefectures) {",
        "+ ",
        "  forecasted_pref_male=forecasted_curves_triangular_rolling[[i]][1:n_age,]",
        "+ ",
        "  forecasted_pref_female=forecasted_curves_triangular_rolling[[i]][(n_age+1):(2*n_age),]",
        "+ ",
        "  True_pop_male=t(male[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  True_pop_female=t(female[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  for (j in 1:max_h) {",
        "+ ",
        "    error_MAPE_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_RMSPE_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_MAPE_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    error_RMSPE_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "Error in mape(forecast = forecasted_pref_male[, j], true = True_pop_male[,  : \n  could not find function \"mape\"\n",
        "> ",
        "# saveRDS(forecasted_curves_triangular_rolling,\"forecasted_curves_triangular_rolling_USA_new.rds\")",
        "> ",
        "####################################################################################",
        "> ",
        "#Compute the error for the point forecasts obtained in the rolling window approach.",
        "> ",
        "####################################################################################",
        "> ",
        "source(\"./Rcodes_paper/forecast_errors.R\")",
        "> ",
        "forecasted_curves_triangular_rolling <- readRDS(\"./Rcodes_paper/results_for the plots/USA/forecasted_curves_triangular_USA.rds\") ",
        "> ",
        "max_h=10",
        "> ",
        "error_MAPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_MAPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "male<-Y[,1:n_age]",
        "> ",
        "female<-Y[,(n_age+1):(2*n_age)]",
        "> ",
        "for (i in 1:n_prefectures) {",
        "+ ",
        "  forecasted_pref_male=forecasted_curves_triangular_rolling[[i]][1:n_age,]",
        "+ ",
        "  forecasted_pref_female=forecasted_curves_triangular_rolling[[i]][(n_age+1):(2*n_age),]",
        "+ ",
        "  True_pop_male=t(male[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  True_pop_female=t(female[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  for (j in 1:max_h) {",
        "+ ",
        "    error_MAPE_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_RMSPE_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_MAPE_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    error_RMSPE_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "All_errors_rolling<-list(error_MAPE_male,error_MAPE_female,",
        "+ ",
        "                         error_RMSPE_male,error_RMSPE_female)",
        "> ",
        "saveRDS(All_errors_rolling,\"All_errors_table_USA_dynamic.rds\")",
        "> ",
        "forecasted_curves_triangular_means_USA <- readRDS(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/Rcodes_paper/results_for the plots/USA/forecasted_curves_triangular_means_USA.rds\")",
        "> ",
        "forecasted_curves_triangular_means_rolling <- readRDS(\"./Rcodes_paper/results_for the plots/USA/forecasted_curves_triangular_means_USA.rds\")",
        "> ",
        "max_h=10",
        "> ",
        "error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "for (i in 1:n_prefectures) {",
        "+ ",
        "  forecasted_pref_male=forecasted_curves_triangular_means_rolling[[i]][1:n_age,]",
        "+ ",
        "  forecasted_pref_female=forecasted_curves_triangular_means_rolling[[i]][(n_age+1):(2*n_age),]",
        "+ ",
        "  True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  for (j in 1:max_h) {",
        "+ ",
        "    error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "All_errors_mean_rolling<-list(error_MAPE_means_male,error_MAPE_means_female,",
        "+ ",
        "                              error_RMSPE_means_male,error_RMSPE_means_female)",
        "> ",
        "saveRDS(All_errors_mean_rolling,\"All_errors_table_USA_FM_dynamic.rds\")",
        "> ",
        "packages <- c(\"generics\", \"demography\", \"forecast\",\"fda\",\"fdaoutlier\", ",
        "+ ",
        "              \"rlist\", \"mrfDepth\",\"ftsa\",\"rainbow\")",
        "> ",
        "## Now load or install&load all",
        "> ",
        "package_check <- lapply(",
        "+ ",
        "  packages,",
        "+ ",
        "  FUN <- function(x) {",
        "+ ",
        "    if (!require(x, character.only = TRUE)) {",
        "+ ",
        "      install.packages(x, dependencies = TRUE)",
        "+ ",
        "      library(x, character.only = TRUE)",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        ")",
        "> ",
        "setwd(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/\")",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset entries",
        "> ",
        "################################################################################",
        "> ",
        "dataset_entries<-readRDS(\"./Rcodes_paper/dataset_entries/France/dataset_entries.rds\")",
        "> ",
        "year = dataset_entries[[1]]",
        "> ",
        "n_year = dataset_entries[[2]]",
        "> ",
        "age = dataset_entries[[3]]",
        "> ",
        "n_age = dataset_entries[[4]]",
        "> ",
        "n_prefectures=dataset_entries[[5]]",
        "> ",
        "# Row partition",
        "> ",
        "part_list = list()",
        "> ",
        "for(ik in 1:n_prefectures) {",
        "+ ",
        "  part_list[[ik]] = (n_year*ik-(n_year-1)):(n_year*ik)",
        "+ ",
        "}",
        "> ",
        "#Column partition",
        "> ",
        "n_populations=2",
        "> ",
        "part_list_c = list()",
        "> ",
        "for(ik in 1:n_populations) {",
        "+ ",
        "  part_list_c[[ik]] = (n_age*ik-(n_age-1)):(n_age*ik)",
        "+ ",
        "}",
        "> ",
        "remove_zeroes <- function(data_raw,n_prefectures,n_year,n_age) {",
        "+ ",
        "  N       <- n_prefectures",
        "+ ",
        "  T       <- n_year",
        "+ ",
        "  age_max <- n_age",
        "+ ",
        "  ",
        "+ ",
        "  data_nozero <- list()",
        "+ ",
        "  for(i in 1:N) {",
        "+ ",
        "    data_nozero[[i]] <- matrix(data_raw[[i]],age_max,T)",
        "+ ",
        "  }",
        "+ ",
        "  for(i in 1:N) {",
        "+ ",
        "    for(j in 2:age_max) {#For j=1, the two zeroes have been removed before",
        "+ ",
        "      for(k in 1:T){ ",
        "+ ",
        "        if(data_nozero[[i]][j,k]==-Inf){",
        "+ ",
        "          data_nozero[[i]][j,k] <- data_nozero[[i]][j-1,k]",
        "+ ",
        "        }",
        "+ ",
        "      }",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        "  return(data_nozero)",
        "+ ",
        "}",
        "> ",
        "names_states <- readRDS(\"./Rcodes_paper/names_states/France/name_states.rds\")",
        "> ",
        "################################################################################",
        "> ",
        "# Dataset ",
        "> ",
        "################################################################################",
        "> ",
        "France_male <- readRDS(\"./Rcodes_paper/datasets/France/France_male.rds\")",
        "> ",
        "France_female <- readRDS(\"./Rcodes_paper/datasets/France/France_female.rds\")",
        "> ",
        "# Remove the zeros in the datasets",
        "> ",
        "France_male   <-remove_zeroes(data_raw=France_male,n_prefectures,n_year,n_age) ",
        "> ",
        "France_female <-remove_zeroes(data_raw=France_female,n_prefectures,n_year,n_age)",
        "> ",
        "all_male<-t(list.cbind(France_male))",
        "> ",
        "all_female<-t(list.cbind(France_female))",
        "> ",
        "################################################################################",
        "> ",
        "#Functional median polish decomposition and residuals",
        "> ",
        "################################################################################",
        "> ",
        "# source(\"FMP-ANOVA_decomposition.R\")",
        "> ",
        "library(\"ftsa\")",
        "> ",
        "Y=cbind(all_male,all_female)",
        "> ",
        "Both<-ftsa::Two_way_median_polish(Y,year,age,n_prefectures,n_populations)",
        "Iteration= 1 \nSum = 9595 \nIteration= 2 \nSum = 206.6383 \nIteration= 3 \nSum = 74.75457 \nIteration= 4 \nSum = 52.25195 \nIteration= 5 \nSum = -36.95691 \n",
        "> ",
        "Residuals<- ftsa::Two_way_Residuals(Y,n_prefectures,year,age,n_populations)",
        "Iteration= 1 \nSum = 9595 \nIteration= 2 \nSum = 206.6383 \nIteration= 3 \nSum = 74.75457 \nIteration= 4 \nSum = 52.25195 \nIteration= 5 \nSum = -36.95691 \n",
        "> ",
        "Res1=Residuals$residuals1",
        "> ",
        "forecasted_curves_triangular_rolling <- readRDS(\"./Rcodes_paper/results_for the plots/France/forecasted_curves_triangular_France.rds\") ",
        "> ",
        "max_h=10",
        "> ",
        "error_MAPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_MAPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "male<-Y[,1:n_age]",
        "> ",
        "female<-Y[,(n_age+1):(2*n_age)]",
        "> ",
        "for (i in 1:n_prefectures) {",
        "+ ",
        "  forecasted_pref_male=forecasted_curves_triangular_rolling[[i]][1:n_age,]",
        "+ ",
        "  forecasted_pref_female=forecasted_curves_triangular_rolling[[i]][(n_age+1):(2*n_age),]",
        "+ ",
        "  True_pop_male=t(male[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  True_pop_female=t(female[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  for (j in 1:max_h) {",
        "+ ",
        "    error_MAPE_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_RMSPE_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_MAPE_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    error_RMSPE_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "Error in mape(forecast = forecasted_pref_male[, j], true = True_pop_male[,  : \n  could not find function \"mape\"\n",
        "> ",
        "# saveRDS(forecasted_curves_triangular_rolling,\"forecasted_curves_triangular_rolling_France_new.rds\")",
        "> ",
        "####################################################################################",
        "> ",
        "#Compute the error for the point forecasts obtained in the rolling window approach.",
        "> ",
        "####################################################################################",
        "> ",
        "source(\"./Rcodes_paper/forecast_errors.R\")",
        "> ",
        "forecasted_curves_triangular_rolling <- readRDS(\"./Rcodes_paper/results_for the plots/France/forecasted_curves_triangular_France.rds\") ",
        "> ",
        "max_h=10",
        "> ",
        "error_MAPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_MAPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "male<-Y[,1:n_age]",
        "> ",
        "female<-Y[,(n_age+1):(2*n_age)]",
        "> ",
        "for (i in 1:n_prefectures) {",
        "+ ",
        "  forecasted_pref_male=forecasted_curves_triangular_rolling[[i]][1:n_age,]",
        "+ ",
        "  forecasted_pref_female=forecasted_curves_triangular_rolling[[i]][(n_age+1):(2*n_age),]",
        "+ ",
        "  True_pop_male=t(male[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  True_pop_female=t(female[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  for (j in 1:max_h) {",
        "+ ",
        "    error_MAPE_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_RMSPE_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_MAPE_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    error_RMSPE_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "All_errors_rolling<-list(error_MAPE_male,error_MAPE_female,",
        "+ ",
        "                         error_RMSPE_male,error_RMSPE_female)",
        "> ",
        "saveRDS(All_errors_rolling,\"All_errors_table_France_dynamic.rds\")",
        "> ",
        "forecasted_curves_triangular_means_rolling <- readRDS(\"./Rcodes_paper/results_for the plots/France/forecasted_curves_triangular_means_France.rds\")",
        "> ",
        "max_h=10",
        "> ",
        "error_MAPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_means_male<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_MAPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "error_RMSPE_means_female<-matrix(0,nrow=max_h,ncol = n_prefectures)",
        "> ",
        "for (i in 1:n_prefectures) {",
        "+ ",
        "  forecasted_pref_male=forecasted_curves_triangular_means_rolling[[i]][1:n_age,]",
        "+ ",
        "  forecasted_pref_female=forecasted_curves_triangular_means_rolling[[i]][(n_age+1):(2*n_age),]",
        "+ ",
        "  True_pop_male=t(all_male[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  True_pop_female=t(all_female[(n_year*i-(max_h-1)):(n_year*i),])",
        "+ ",
        "  for (j in 1:max_h) {",
        "+ ",
        "    error_MAPE_means_male[j,i]<-mape(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_RMSPE_means_male[j,i]<-rmspe(forecast=forecasted_pref_male[,j], true=True_pop_male[,j])",
        "+ ",
        "    error_MAPE_means_female[j,i]<-mape(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    error_RMSPE_means_female[j,i]<-rmspe(forecast=forecasted_pref_female[,j], true=True_pop_female[,j])",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "All_errors_mean_rolling<-list(error_MAPE_means_male,error_MAPE_means_female,",
        "+ ",
        "                              error_RMSPE_means_male,error_RMSPE_means_female)",
        "> ",
        "saveRDS(All_errors_mean_rolling,\"All_errors_table_France_FM_dynamic.rds\")",
        "> ",
        "setwd(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes\")",
        "> ",
        "All_errors_tables_USA_static <- readRDS(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/All_errors_tables_USA_static.rds\")",
        "> ",
        "All_errors_tables_USA_FM_static <- readRDS(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/All_errors_tables_USA_FM_static.rds\")",
        "> ",
        "All_errors_table_USA_dynamic <- readRDS(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/All_errors_table_USA_dynamic.rds\")",
        "> ",
        "All_errors_table_USA_FM_dynamic <- readRDS(\"~/My Drive/Fall 2023/STAT 397/PhD project 4/Revisions from JCGS/Rcodes/All_errors_table_USA_FM_dynamic.rds\")",
        "\nRestarting R session...\n\n"
    ]
}